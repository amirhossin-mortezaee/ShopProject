@model ProjectShopCMS.DAL.Products
@using ProjectShopCMS.DAL
@{
    ViewBag.Title = "Create";
}
<style>
    ul {
        list-style-type: none;
    }
    /* The container */
    .container {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        margin-top: 10px;
        cursor: pointer;
        font-size: 15px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default checkbox */
        .container input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

    /* Create a custom checkbox */
    .checkmark {
        border-radius: 5px;
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
    }

    /* On mouse-over, add a grey background color */
    .container:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the checkbox is checked, add a blue background */
    .container input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .container input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    .container .checkmark:after {
        left: 9px;
        top: 5px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }
</style>

@if (ViewBag.ErrorselectedProductCategory == true)
{
    <div class="alert alert-danger">
        کاربر محترم هیچ گروه محصولی از جانب شما انتخاب نشده است
    </div>
}
<h2>افزودن محصول جدید</h2>
<div class="row">
    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="col-md-8">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDiscription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShortDiscription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDiscription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TextProduct, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.TextProduct, new { htmlAttributes = new { @class = "form-control", id = "TextProduct" } })
                        @Html.ValidationMessageFor(model => model.TextProduct, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="control-label col-md-2">برچسب ها</span>
                    <div class="col-md-10"> 
                        <input required name="tags" type="text" class="form-control" placeholder="کاربر محترم کلمات کلیدی را با '،'جدا فرمایید"/>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="ثبت " class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-primary">
                <div class="panel-heading">تصویر محصول</div>
                <div class="panel-body">
                    <img id="imgPreviewProduct" style="margin: 8px  auto;width:500px;height:150px;" class="thumbnail" src="~/Images/ProductsImages/MiniProductImage/no-Product-Image.png" />
                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" id="imageProduct" name="imageUpload" />
                            @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">انتخاب گروه</div>
                <div class="panel-body">
                    @{
                        List<ProductGrops> groups = ViewBag.ProductGroups;

                        <ul>
                            @foreach (var group in groups.Where(g => g.ParentId == null))
                            {
                                <li>
                                    <label class="container">
                                        @group.GroupTitle
                                        <input type="checkbox" name="selectedProductCategory" value="@group.GroupId">
                                        <span class="checkmark" style=" transform: translate(190px,0px); "></span>
                                    </label>
                                    @if (groups.Any(g => g.ParentId == group.GroupId))
                                    {
                                        <ul>
                                            @foreach (var subGroup in groups.Where(g => g.ParentId == group.GroupId))
                                            {
                                                <li>
                                                    <label class="container" style="transform: translate(57px,4px); padding-right: 105px; ">
                                                        @subGroup.GroupTitle
                                                        <input type="checkbox" name="selectedProductCategory" value="@subGroup.GroupId">
                                                        <span class="checkmark" style=" transform: translate(78px,0px); "></span>
                                                    </label>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("بازگشت به لیست محصولات", "Index")
</div>
@section scripts{
    <script src="~/ckeditor/ckeditor.js"></script>
    <script src="~/ckeditor/adapters/jquery.js"></script>

    <script>
        $(function () {
            $('#TextProduct').ckeditor();
        });
    </script>

    <script>
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgPreviewProduct').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imageProduct").change(function () {
            readURL(this);
        });
    </script>
}